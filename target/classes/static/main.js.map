{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/home.component.html","webpack:///./src/app/home.component.ts","webpack:///./src/app/login.component.html","webpack:///./src/app/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'home'},\n  {path: 'home', component: HomeComponent},\n  {path: 'login', component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <ul class=\\\"nav nav-pills\\\">\\n    <li><a routerLinkActive=\\\"active\\\" routerLink=\\\"/home\\\">Home</a></li>\\n    <li><a routerLinkActive=\\\"active\\\" routerLink=\\\"/login\\\">Login</a></li>\\n    <li><a (click)=\\\"logout()\\\">Logout</a></li>\\n  </ul>\\n</div>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { AppService } from './app.service';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private app: AppService, private http: HttpClient, private router: Router) {\n      this.app.authenticate(undefined, undefined);\n    }\n    logout() {\n      this.http.post('logout', {}).pipe( finalize(() => {\n        this.app.authenticated = false;\n        this.router.navigateByUrl('/login');\n      })).subscribe();          \n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home.component';\nimport { LoginComponent } from './login.component';\nimport { AppService } from './app.service';\n\nimport { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS\n} from '@angular/common/http';\n\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.append('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    AppService,\n    { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class AppService {\n\n  authenticated = false;\n\n  constructor(private http: HttpClient) {\n  }\n\n  authenticate(credentials, callback) {\n\n        const headers = new HttpHeaders(credentials ? {\n            authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password)\n        } : {});\n\n        this.http.get('user', {headers: headers}).subscribe(response => {\n            if (response['name']) {\n                this.authenticated = true;\n            } else {\n                this.authenticated = false;\n            }\n            return callback && callback();\n        });\n\n    }\n\n}\n","module.exports = \"<h1>Greeting</h1>\\n<div [hidden]=\\\"!authenticated()\\\">\\n\\t<p>The ID is {{greeting.id}}</p>\\n\\t<p>The content is {{greeting.content}}</p>\\n</div>\\n<div [hidden]=\\\"authenticated()\\\">\\n\\t<p>Login to see your greeting</p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from './app.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n\n  title = 'Demo';\n  greeting = {};\n\n  constructor(private app: AppService, private http: HttpClient) {\n    http.get('resource').subscribe(data => this.greeting = data);\n  }\n\n  authenticated() { return this.app.authenticated; }\n\n}\n","module.exports = \"<div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error\\\">\\n\\tThere was a problem logging in. Please try again.\\n</div>\\n<form role=\\\"form\\\" (submit)=\\\"login()\\\">\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label for=\\\"username\\\">Username:</label> <input type=\\\"text\\\"\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"credentials.username\\\"/>\\n\\t</div>\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label for=\\\"password\\\">Password:</label> <input type=\\\"password\\\"\\n\\t\\t\\tclass=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"credentials.password\\\"/>\\n\\t</div>\\n\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from './app.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\n  credentials = {username: '', password: ''};\n\n  constructor(private app: AppService, private http: HttpClient, private router: Router) {\n  }\n\n  login() {\n    this.app.authenticate(this.credentials, () => {\n        this.router.navigateByUrl('/');\n    });\n    return false;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}